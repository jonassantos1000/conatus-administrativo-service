name: Gerar tag e realizar deploy

on:
  pull_request:
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      NEXUS_HOST: ${{ secrets.NEXUS_HOST }}

    steps:
    - name: Checkout do cÃ³digo
      uses: actions/checkout@v2

    - name: Configurar ambiente
      uses: actions/setup-java@v3.13.0
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven

    - name: copiar settings-conatus-repository.xml
      run: |
        envsubst < devops/settings-conatus-repository.xml > $HOME/.m2/settings.xml
        export MAVEN_HOME=$HOME/.m2/settings.xml

    - name: Gerar Tag e Fazer Deploy
      if: github.event.pull_request.merged == true
      run: |
        # ObtÃ©m a versÃ£o do application.properties
        VERSION=$(grep 'conatus.versao' application.properties | cut -d'=' -f2)

        # Gerar uma tag com a versÃ£o do application.properties
        git tag $VERSION
        git push origin $VERSION

        # ObtÃ©m o artifactId do projeto Maven
        ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)

        # Configurar o nome do arquivo JAR com base no artifactId e versÃ£o
        JAR_NAME="$ARTIFACT_ID-$VERSION.jar"

        # Realiza o build do projeto e especifica o nome do arquivo JAR
        mvn clean install -DskipTests -Dmaven.finalName=$JAR_NAME

        # Realiza o deploy no Nexus usando o perfil nexus e especifica o nome do arquivo JAR
        mvn deploy -DskipTests -Pnexus -Dfile=target/$JAR_NAME -DpomFile=pom.xml -DskipDeploy=true

        # Baixa o JAR do Nexus
        wget http://nexus-host/repository/mvn-conatus-sa/$VERSION/$JAR_NAME

        # Configura as credenciais do Google Cloud
        echo ${{ secrets.GCLOUD_SERVICE_KEY }} > /tmp/key.json

        # Envia o JAR para o GCE
        gcloud compute scp $JAR_NAME ${{ secrets.INSTANCE_NAME }}:/etc/dev/conatus --strict-host-key-checking=no --quiet --zone=${{ secrets.ZONE }} --project=${{ secrets.GCLOUD_PROJECT_ID }} --key-file=/tmp/key.json

        # Executa o JAR no GCE
        gcloud compute ssh ${{ secrets.INSTANCE_NAME }} --command "java -jar /etc/dev/conatus/$JAR_NAME &" --strict-host-key-checking=no --quiet --zone=${{ secrets.ZONE }} --project=${{ secrets.GCLOUD_PROJECT_ID }} --key-file=/tmp/key.json

    - name: Comentar no PR
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ O Pull Request passou nos testes unitÃ¡rios automatizados!'
            })
